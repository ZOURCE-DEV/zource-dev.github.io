{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/01/custom-wsl2-distro/","result":{"data":{"site":{"siteMetadata":{"title":"ZOURCE"}},"markdownRemark":{"id":"fd6ec7ce-220e-554a-9964-24082d4d5fb7","excerpt":"Настройка systemd упрощена до одной команды.\nНо будьте бдительны, не запускайте сторонние скрипты не проверив их. Сначала, перегенерируем ключи хоста, так как…","html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube-nocookie.com/embed/CB79Lq3Y-FA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>Настройка systemd упрощена до одной команды.\nНо будьте бдительны, не запускайте сторонние скрипты не проверив их.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> -O - https://dl.zource.dev/wsl-setup.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></code></pre></div>\n<p>Сначала, перегенерируем ключи хоста, так как скорее всего они отсутствуют, перезапустим sshd и добавим настройки <code class=\"language-text\">ssh-agent</code> в наше окружение.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> ssh-keygen -A -f /\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> <span class=\"token function\">ssh</span> --full-restart\n<span class=\"token builtin class-name\">eval</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>ssh-agent -s<span class=\"token variable\">)</span></span></code></pre></div>\n<p>Проверим, что ssh сервер запустился и исправен</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">service</span> <span class=\"token function\">ssh</span> status</code></pre></div>\n<p>Сгенерируем несколько пар ключей алгоритмом RSA длинной 4096 бит указав секретную фразу, EMAIL и путь.\nЯ рекомендую фразу для начала оставить пустой, что бы не вводить ее каждый раз при использовании ключа.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> -p ~/.ssh\nssh-keygen -t rsa -b <span class=\"token number\">4096</span> -N <span class=\"token string\">\"\"</span> -C admin@zource.dev -f ~/.ssh/id_rsa</code></pre></div>\n<p>После того как сгенерируете все ключи загрузите их в SSH агент и добавьте <code class=\"language-text\">id_rsa.pub</code> в список авторизованных ключей для локального использования</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ssh-add ~/.ssh/*_rsa\n<span class=\"token function\">cat</span> ~/.ssh/id_rsa.pub <span class=\"token operator\">></span> ~/.ssh/authorized_keys</code></pre></div>\n<p>Теперь, что бы использовать созданный ключ, нужно запускать SSH с параметром <code class=\"language-text\">-i</code> указав путь к ключу.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> zource@localhost -i ~/.ssh/id_rsa</code></pre></div>\n<p>Вы увидите сообщение о том что система находится в состоянии загрузки.\nЭто происходит изза файла <code class=\"language-text\">/run/nologin</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ls -l /run/nologin\ncat /run/nologin</code></pre></div>\n<p>Для того что бы это исправить, просто переименуйте этот файл.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mv /run/nologin /run/nologin.bak</code></pre></div>\n<p>Давайте подскажем SSH клиенту, какой ключ для какого сервиса мы хотим использовать.\nДля этого в папке <code class=\"language-text\">~/.ssh/</code> создадим файл <code class=\"language-text\">config</code> и пропишем какой хост, должен использовать какой ключ</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">nano ~/.ssh/config\nHost localhost\n  IdentityFile ~/.ssh/id_rsa\n\nHost github.com\n  IdentityFile ~/.ssh/github_rsa\n\nHost heroku.com\n  IdentityFile ~/.ssh/heroku_rsa</code></pre></div>\n<p>Обязательно после этого задайте права доступа 700 на директорию <code class=\"language-text\">.ssh/</code> и 600 на все что внути нее.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chmod</span> <span class=\"token number\">700</span> ~/.ssh\n<span class=\"token function\">chmod</span> <span class=\"token number\">600</span> ~/.ssh/*</code></pre></div>\n<h2>Экспорт</h2>\n<p>Сейчас мы можем экспортировать дистрибутив в файл, для этого в Powershell запустим wsl c опцией export указав название дистрибутива и место его сохранения</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">wsl --export ubuntu-20.04 $env:USERPROFILE/ubuntu.tar.gz</code></pre></div>\n<h2>Импорт</h2>\n<p>После того как мы экспортировали дистрибутив, мы можем импортировать его опцией import</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">wsl --import ubuntu $env:USERPROFILE/ubuntu $env:USERPROFILE/ubuntu.tar.gz</code></pre></div>\n<p>Но сразу после импорта можно заметить одно неудобство, ведь пользователь по умолчанию для данного дистрибутива будет <code class=\"language-text\">root</code>, а не тот которого вы задали ранее.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">wsl -d ubuntu -e whoami</code></pre></div>\n<p>Это можно легко исправить добавив запись в реестр с UID пользователя.\nДля этого откроем редактор реестра regedit по пути HKEY<em>CURRENT</em>USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Lxss и найдем ключ где DistributionName содержит имя нашего дистрибутива.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">wsl -d ubuntu -u zource -e <span class=\"token function\">id</span> -u</code></pre></div>\n<p>Вернемся в powershell и получим uid нашего пользователя.\nПосле чего установим его в значение для ключа реестра DefaultUid в моем случае это 1000</p>\n<p>Либо с помощью powershell.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token variable\">$distro</span> = <span class=\"token string\">\"ubuntu\"</span>\n<span class=\"token variable\">$user</span> = wsl <span class=\"token operator\">-</span>d <span class=\"token variable\">$distro</span> <span class=\"token operator\">-</span>e <span class=\"token function\">ls</span> <span class=\"token operator\">/</span>home\n<span class=\"token variable\">$uid</span> = wsl <span class=\"token operator\">-</span>d <span class=\"token variable\">$distro</span> <span class=\"token operator\">-</span>u <span class=\"token variable\">$user</span> <span class=\"token operator\">-</span>e id <span class=\"token operator\">-</span>u\n<span class=\"token function\">Get-ItemProperty</span> Registry::HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Lxss\\<span class=\"token operator\">*</span>\\ DistributionName <span class=\"token punctuation\">|</span> <span class=\"token function\">Where-Object</span> <span class=\"token operator\">-</span>Property DistributionName <span class=\"token operator\">-eq</span> <span class=\"token variable\">$distro</span> <span class=\"token punctuation\">|</span> <span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>Name DefaultUid <span class=\"token operator\">-</span>Value <span class=\"token variable\">$uid</span></code></pre></div>","frontmatter":{"title":"WSL2: Свой дистрибутив","date":"January 08, 2021","description":"Создание собственного дистрибутива для WSL2"}}},"pageContext":{"slug":"/2021/01/custom-wsl2-distro/","previous":{"fields":{"slug":"/2020/06/gui-wsl2/"},"frontmatter":{"title":"WSL2: GUI + AUDIO"}},"next":null}},"staticQueryHashes":["2841359383"]}