{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/06/gui-wsl2/","result":{"data":{"site":{"siteMetadata":{"title":"ZOURCE"}},"markdownRemark":{"id":"9c76a9fa-6461-5f5c-859b-a487f17628ab","excerpt":"Грфика Введите в bash что бы объявить переменную  с адресом дисплейного сервера и делегируйте отрисовку OpenGL к X Window System Server Или добавьте в…","html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube-nocookie.com/embed/e3CsiOhHGq0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<h3>Грфика</h3>\n<p>Введите в bash что бы объявить переменную <code class=\"language-text\">DISPLAY</code> с адресом дисплейного сервера и делегируйте отрисовку OpenGL к X Window System Server</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">DISPLAY</span></span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/resolv.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -Po <span class=\"token string\">\"(?&lt;=nameserver\\s)([\\d.]+)\"</span><span class=\"token variable\">)</span></span>:0\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LIBGL_ALWAYS_INDIRECT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></code></pre></div>\n<p>Или добавьте в <code class=\"language-text\">~/.bashrc</code> автоинициализацию переменных при старте</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;-</span> <span class=\"token string\">\"EOF\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> -a ~/.bashrc <span class=\"token operator\">></span> /dev/null\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">DISPLAY</span></span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/resolv.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -Po <span class=\"token string\">\"(?&lt;=nameserver\\s)([\\d.]+)\"</span><span class=\"token variable\">)</span></span>:0\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">LIBGL_ALWAYS_INDIRECT</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\nEOF\n<span class=\"token builtin class-name\">source</span> ~/.bashrc</code></pre></div>\n<p>Скачайте и установите <a href=\"https://sourceforge.net/projects/vcxsrv/\">VcXsrv</a></p>\n<ul>\n<li>в настройках отображения выбирите режим множество окон</li>\n<li>оставьте запуск без клиента</li>\n<li>поставьте чекбокс Disable Access Control</li>\n<li>добавьте параметр <code class=\"language-text\">-swcursor</code> для отрисовки курсора программой</li>\n<li>и параметр <code class=\"language-text\">-screen 0 @1</code> что бы выводить окна на первый монитор если у вас их несколько</li>\n<li>сохраните конфигурацию в удобном месте с названием например wsl.xlaunch</li>\n<li>и нажмите Finish что бы запустить VcXsrv</li>\n</ul>\n<p>Для проверки установите Chromium</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> chromium</code></pre></div>\n<p>Проверить версию хрома можно по этой ссылке <a href=\"chrome://settings/help\">chrome://settings/help</a></p>\n<h3>Звук</h3>\n<p>Для настройки звука скачайте и распакуйте <a href=\"http://bosmans.ch/pulseaudio/pulseaudio-1.1.zip\">PulseAudio</a></p>\n<p>В powershell с правами администратора выполните из директории PulseAudio</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Add-Content</span> etc\\pulse\\default<span class=\"token punctuation\">.</span>pa <span class=\"token operator\">-</span>Value <span class=\"token string\">'load-module module-waveout sink_name=output source_name=input record=0'</span>\n<span class=\"token function\">Add-Content</span> etc\\pulse\\default<span class=\"token punctuation\">.</span>pa <span class=\"token operator\">-</span>Value <span class=\"token string\">'load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1'</span>\n<span class=\"token function\">Add-Content</span> etc\\pulse\\daemon<span class=\"token punctuation\">.</span>conf <span class=\"token operator\">-</span>Value <span class=\"token string\">'exit-idle-time = -1'</span></code></pre></div>\n<p>И создайте задачу для Windows</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">schtasks <span class=\"token operator\">/</span>create <span class=\"token operator\">/</span>tn <span class=\"token string\">\"pulseaudio\"</span> <span class=\"token operator\">/</span><span class=\"token function\">sc</span> onstart <span class=\"token operator\">/</span>np <span class=\"token operator\">/</span>rl highest <span class=\"token operator\">/</span>f <span class=\"token operator\">/</span>tr <span class=\"token string\">\"powershell Start-Process -FilePath <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-Location</span><span class=\"token punctuation\">)</span></span>.Path)\\bin\\pulseaudio.exe -WorkingDirectory <span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">Get-Location</span><span class=\"token punctuation\">)</span></span>.Path)\"</span>\nschtasks <span class=\"token operator\">/</span>run <span class=\"token operator\">/</span>tn <span class=\"token string\">\"pulseaudio\"</span></code></pre></div>\n<p>Удалить задачу можно командой</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">schtasks <span class=\"token operator\">/</span>delete <span class=\"token operator\">/</span>tn <span class=\"token string\">\"pulseaudio\"</span> <span class=\"token operator\">/</span>f</code></pre></div>\n<p>в WSL объявите переменную <code class=\"language-text\">PULSE_SERVER</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PULSE_SERVER</span><span class=\"token operator\">=</span>tcp:<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/resolv.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -Po <span class=\"token string\">\"(?&lt;=nameserver\\s)([\\d.]+)\"</span><span class=\"token variable\">)</span></span></code></pre></div>\n<p>Или добавьте в <code class=\"language-text\">~/.bashrc</code> автоинициализацию переменной при старте</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;-</span> <span class=\"token string\">\"EOF\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">tee</span> -a ~/.bashrc <span class=\"token operator\">></span> /dev/null\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PULSE_SERVER</span><span class=\"token operator\">=</span>tcp:<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> /etc/resolv.conf <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -Po <span class=\"token string\">\"(?&lt;=nameserver\\s)([\\d.]+)\"</span><span class=\"token variable\">)</span></span>\nEOF\n<span class=\"token builtin class-name\">source</span> ~/.bashrc</code></pre></div>\n<p>А так же дополнительно установите libpulse</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -y libpulse0</code></pre></div>\n<p>Для теста давайте запустим что-нибудь интересное со звуком, напрмер supertux</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> snap <span class=\"token function\">install</span> supertux\nsupertux --renderer sdl</code></pre></div>\n<p>Параметр <code class=\"language-text\">--renderer sdl</code> избавляет от некоторых сообщений об ошибках.</p>\n<h5>Надеюсь Вам было интересно, подпишитесь на канал это дает мне больше мотивации создавать более интересные видео и чаще</h5>","frontmatter":{"title":"WSL2: GUI + AUDIO","date":"June 27, 2020","description":"Установка и настройка графики и звука WSL2 для Windows 10"}}},"pageContext":{"slug":"/2020/06/gui-wsl2/","previous":{"fields":{"slug":"/2020/05/vscode-wsl2/"},"frontmatter":{"title":"WSL2: VSCode + WSL2"}},"next":null}}}