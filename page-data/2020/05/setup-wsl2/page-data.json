{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/05/setup-wsl2/","result":{"data":{"site":{"siteMetadata":{"title":"ZOURCE"}},"markdownRemark":{"id":"a27c2435-fe6b-525e-909b-e27bcea838a8","excerpt":"Установка Chocolatey и активация компонентов Windows Проверка сборки Windows и регистрация в  Перегружаем компьютер После перезагрузки установите все…","html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube-nocookie.com/embed/_hiSMQifaE4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>Установка Chocolatey и активация компонентов Windows</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Set</span><span class=\"token operator\">-</span>ExecutionPolicy Bypass <span class=\"token operator\">-</span>Scope <span class=\"token keyword\">Process</span> <span class=\"token operator\">-</span>Force<span class=\"token punctuation\">;</span> <span class=\"token function\">iex</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">New-Object</span> System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>WebClient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DownloadString<span class=\"token punctuation\">(</span><span class=\"token string\">'https://chocolatey.org/install.ps1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nEnable<span class=\"token operator\">-</span>WindowsOptionalFeature <span class=\"token operator\">-</span>NoRestart <span class=\"token operator\">-</span>Online <span class=\"token operator\">-</span>FeatureName VirtualMachinePlatform\nEnable<span class=\"token operator\">-</span>WindowsOptionalFeature <span class=\"token operator\">-</span>NoRestart <span class=\"token operator\">-</span>Online <span class=\"token operator\">-</span>FeatureName Microsoft<span class=\"token operator\">-</span>Windows<span class=\"token operator\">-</span>Subsystem<span class=\"token operator\">-</span>Linux</code></pre></div>\n<p>Проверка сборки Windows и регистрация в <code class=\"language-text\">Windows Insider Program</code></p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token namespace\">[System.Environment]</span>::OSVersion<span class=\"token punctuation\">.</span>Version<span class=\"token punctuation\">.</span>Build\n<span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>Uri https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>raw<span class=\"token punctuation\">.</span>githubusercontent<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>whatever127<span class=\"token operator\">/</span>offlineinsiderenroll<span class=\"token operator\">/</span>master<span class=\"token operator\">/</span>OfflineInsiderEnroll<span class=\"token punctuation\">.</span>cmd <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\OfflineInsiderEnroll.cmd\"</span> <span class=\"token operator\">-</span>UseBasicParsing\n<span class=\"token function\">Invoke-Item</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\OfflineInsiderEnroll.cmd\"</span>\n<span class=\"token function\">Restart-Computer</span></code></pre></div>\n<blockquote>\n<p>Перегружаем компьютер</p>\n</blockquote>\n<p>После перезагрузки установите все появившиеся обновления.</p>\n<p>Для ARM устройств</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>Uri https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>wslstorestorage<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>windows<span class=\"token punctuation\">.</span>net<span class=\"token operator\">/</span>wslblob<span class=\"token operator\">/</span>wsl_update_arm64<span class=\"token punctuation\">.</span>msi <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\wsl_update.msi\"</span> <span class=\"token operator\">-</span>UseBasicParsing</code></pre></div>\n<p>Для x64 устройств</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>Uri https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>wslstorestorage<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>windows<span class=\"token punctuation\">.</span>net<span class=\"token operator\">/</span>wslblob<span class=\"token operator\">/</span>wsl_update_x64<span class=\"token punctuation\">.</span>msi <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\wsl_update.msi\"</span> <span class=\"token operator\">-</span>UseBasicParsing</code></pre></div>\n<p>Запускаем установку</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-Item</span> <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\wsl_update.msi\"</span></code></pre></div>\n<p><a href=\"https://docs.microsoft.com/en-us/windows/wsl/wsl2-install\">Подробнее про WSL2 здесь</a></p>\n<p>Установка версии WSL по-умолчанию</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">wsl <span class=\"token operator\">--</span><span class=\"token function\">set</span><span class=\"token operator\">-</span>default<span class=\"token operator\">-</span>version 2</code></pre></div>\n<p>Установка Ubuntu 18.04</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token function\">Invoke-WebRequest</span> <span class=\"token operator\">-</span>Uri https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>aka<span class=\"token punctuation\">.</span>ms<span class=\"token operator\">/</span>wsl<span class=\"token operator\">-</span>ubuntu<span class=\"token operator\">-</span>1804 <span class=\"token operator\">-</span>OutFile <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\Ubuntu.appx\"</span> <span class=\"token operator\">-</span>UseBasicParsing\nAdd<span class=\"token operator\">-</span>AppxPackage <span class=\"token string\">\"<span class=\"token function\">$<span class=\"token punctuation\">(</span><span class=\"token variable\">$env</span>:temp<span class=\"token punctuation\">)</span></span>\\Ubuntu.appx\"</span></code></pre></div>\n<p>Установка daemonize</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> -yqq daemonize dbus-user-session fontconfig</code></pre></div>\n<p>Для этого в директории <code class=\"language-text\">/etc/profile.d/</code> создаем файл <code class=\"language-text\">00-wsl2.sh</code>\nи вставляем следующее содержимое</p>\n<p>Автозапуск <code class=\"language-text\">systemd</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> <span class=\"token variable\"><span class=\"token variable\">`</span>/etc/profile.d/00-wsl2.sh<span class=\"token variable\">`</span></span></code></pre></div>\n<p>Вставляем этот фрагмент</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">SYSTEMD_PID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'/lib/systemd/systemd --system-unit=basic.target$'</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v unshare <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n   <span class=\"token function\">sudo</span> /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit<span class=\"token operator\">=</span>basic.target\n   <span class=\"token assign-left variable\">SYSTEMD_PID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'/lib/systemd/systemd --system-unit=basic.target$'</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v unshare <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -n <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">exec</span> <span class=\"token function\">sudo</span> /usr/bin/nsenter -t <span class=\"token variable\">$SYSTEMD_PID</span> -a <span class=\"token function\">su</span> - <span class=\"token environment constant\">$LOGNAME</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<p>Разрешим привиллегии супер пользователя</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> visudo</code></pre></div>\n<p>Курсор в конец файла <code class=\"language-text\">Alt + /</code> и вставляем команды</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">%sudo <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span> NOPASSWD: /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit<span class=\"token operator\">=</span>basic.target\n%sudo <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span> NOPASSWD: /usr/bin/nsenter -t <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span>* -a <span class=\"token function\">su</span> - <span class=\"token punctuation\">[</span>a-zA-Z0-9<span class=\"token punctuation\">]</span>*</code></pre></div>\n<p>Выключаем ubuntu-18.04</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">wsl <span class=\"token operator\">--</span>shutdown Ubuntu\nwsl <span class=\"token operator\">-</span>l <span class=\"token operator\">-</span>v</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">  NAME                   STATE           VERSION\n<span class=\"token operator\">*</span> Ubuntu<span class=\"token operator\">-</span>18<span class=\"token punctuation\">.</span>04           Stopped         2\n  docker<span class=\"token operator\">-</span>desktop         Stopped         2\n  docker<span class=\"token operator\">-</span>desktop<span class=\"token operator\">-</span><span class=\"token keyword\">data</span>    Stopped         2</code></pre></div>\n<p>Вы должны увидеть слово <code class=\"language-text\">Stopped</code> напротив названия.\nПовторите через минуту <code class=\"language-text\">wsl -l -v</code> если не остановился.</p>\n<p>Проверяем <code class=\"language-text\">systemd</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ps</span> -e<span class=\"token operator\">|</span><span class=\"token function\">grep</span> systemd</code></pre></div>\n<p>Должен быть похожий результат</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    <span class=\"token number\">1</span> ?        00:00:00 systemd\n   <span class=\"token number\">60</span> ?        00:00:00 systemd-journal\n   <span class=\"token number\">76</span> ?        00:00:00 systemd-udevd\n  <span class=\"token number\">218</span> ?        00:00:00 systemd-timesyn\n  <span class=\"token number\">220</span> ?        00:00:00 systemd-network\n  <span class=\"token number\">222</span> ?        00:00:00 systemd-resolve\n  <span class=\"token number\">234</span> ?        00:00:00 systemd-logind</code></pre></div>","frontmatter":{"title":"WSL2: Установка и настройка","date":"May 06, 2020","description":"Установка и настройка WSL2 для Windows 10"}}},"pageContext":{"slug":"/2020/05/setup-wsl2/","previous":null,"next":null}}}