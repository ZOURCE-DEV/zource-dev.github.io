{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/05/vscode-wsl2/","result":{"data":{"site":{"siteMetadata":{"title":"ZOURCE"}},"markdownRemark":{"id":"a8d247db-8920-5b84-b49a-ee068623d016","excerpt":"Установите vscode.  Вставьте, сохраните ,  и закройте  Добавьте права на выполнение скрипта  Вставьте, сохраните ,  и закройте  добавьте права на выполнение…","html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <iframe src=\"https://www.youtube-nocookie.com/embed/LhZlA7FNOM4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div>\n<p>Установите vscode.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">choco upgrade <span class=\"token operator\">-</span>y vscode</code></pre></div>\n<h4><code class=\"language-text\">/usr/sbin/start-systemd-namespace</code></h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /usr/sbin/start-systemd-namespace</code></pre></div>\n<p>Вставьте, сохраните <code class=\"language-text\">Ctrl+O</code>, <code class=\"language-text\">Enter</code> и закройте <code class=\"language-text\">Ctrl+X</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token assign-left variable\">SYSTEMD_PID</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'/lib/systemd/systemd --system-unit=basic.target$'</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v unshare <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">PRE_NAMESPACE_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PATH</span>\"</span>\n    <span class=\"token punctuation\">(</span>set -o posix<span class=\"token punctuation\">;</span> <span class=\"token builtin class-name\">set</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^BASH\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^DIRSTACK=\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^EUID=\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^GROUPS=\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^HOME=\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^HOSTNAME=\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^HOSTTYPE=\"</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^IFS='.*\"</span>$<span class=\"token string\">'<span class=\"token entity\" title=\"\\n\">\\n</span>'</span>\"<span class=\"token string\">'\" | \\\n        grep -v \"^LANG=\" | \\\n        grep -v \"^LOGNAME=\" | \\\n        grep -v \"^MACHTYPE=\" | \\\n        grep -v \"^NAME=\" | \\\n        grep -v \"^OPTERR=\" | \\\n        grep -v \"^OPTIND=\" | \\\n        grep -v \"^OSTYPE=\" | \\\n        grep -v \"^PIPESTATUS=\" | \\\n        grep -v \"^POSIXLY_CORRECT=\" | \\\n        grep -v \"^PPID=\" | \\\n        grep -v \"^PS1=\" | \\\n        grep -v \"^PS4=\" | \\\n        grep -v \"^SHELL=\" | \\\n        grep -v \"^SHELLOPTS=\" | \\\n        grep -v \"^SHLVL=\" | \\\n        grep -v \"^SYSTEMD_PID=\" | \\\n        grep -v \"^UID=\" | \\\n        grep -v \"^USER=\" | \\\n        grep -v \"^_=\" | \\\n        cat - > \"<span class=\"token environment constant\">$HOME</span>/.systemd-env\"\n    echo \"PATH='</span><span class=\"token environment constant\">$PATH</span>'<span class=\"token string\">\" >> \"</span><span class=\"token environment constant\">$HOME</span>/.systemd-env<span class=\"token string\">\"\n    exec sudo /usr/sbin/enter-systemd-namespace \"</span><span class=\"token variable\">$BASH_EXECUTION_STRING</span><span class=\"token string\">\"\nfi\nif [ -n \"</span><span class=\"token variable\">$PRE_NAMESPACE_PATH</span><span class=\"token string\">\" ]; then\n    export PATH=\"</span><span class=\"token variable\">$PRE_NAMESPACE_PATH</span>\"\n<span class=\"token keyword\">fi</span></code></pre></div>\n<p>Добавьте права на выполнение скрипта</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/sbin/start-systemd-namespace</code></pre></div>\n<h4><code class=\"language-text\">/usr/sbin/start-systemd-namespace</code></h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /usr/sbin/enter-systemd-namespace</code></pre></div>\n<p>Вставьте, сохраните <code class=\"language-text\">Ctrl+O</code>, <code class=\"language-text\">Enter</code> и закройте <code class=\"language-text\">Ctrl+X</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token environment constant\">$UID</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"You need to run <span class=\"token variable\">$0</span> through sudo\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token assign-left variable\">SYSTEMD_PID</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'/lib/systemd/systemd --system-unit=basic.target$'</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v unshare <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit<span class=\"token operator\">=</span>basic.target\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> -z <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n        <span class=\"token assign-left variable\">SYSTEMD_PID</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ps</span> -ef <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'/lib/systemd/systemd --system-unit=basic.target$'</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v unshare <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$2</span>}'</span><span class=\"token variable\">)</span></span>\"</span>\n    <span class=\"token keyword\">done</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -n <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -n <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"bash --login\"</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"/bin/bash --login\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n        <span class=\"token builtin class-name\">exec</span> /usr/bin/nsenter -t <span class=\"token string\">\"<span class=\"token variable\">$SYSTEMD_PID</span>\"</span> -a <span class=\"token punctuation\">\\</span>\n            /usr/bin/sudo -H -u <span class=\"token string\">\"<span class=\"token variable\">$SUDO_USER</span>\"</span> <span class=\"token punctuation\">\\</span>\n            /bin/bash -c <span class=\"token string\">'set -a; source \"<span class=\"token environment constant\">$HOME</span>/.systemd-env\"; set +a; exec bash -c '</span>\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">\"%q\"</span> <span class=\"token string\">\"<span class=\"token variable\">$@</span>\"</span><span class=\"token variable\">)</span></span><span class=\"token string\">\"\n    else\n        exec /usr/bin/nsenter -t \"</span><span class=\"token variable\">$SYSTEMD_PID</span><span class=\"token string\">\" -a \\\n            /bin/login -p -f \"</span><span class=\"token variable\">$SUDO_USER</span><span class=\"token string\">\" \\\n            <span class=\"token variable\"><span class=\"token variable\">$(</span>/bin/cat <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/.systemd-env\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> -v <span class=\"token string\">\"^PATH=\"</span><span class=\"token variable\">)</span></span>\n    fi\n    echo \"</span>Existential crisis\"\n<span class=\"token keyword\">fi</span></code></pre></div>\n<p>добавьте права на выполнение</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/sbin/enter-systemd-namespace</code></pre></div>\n<h3>sudoers</h3>\n<p>Запустите <code class=\"language-text\">sudo visudo</code> и переместитесь в конец нажав <code class=\"language-text\">Alt + /</code>\nНажимая <code class=\"language-text\">Ctrl+K</code> удалите эти строки</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">%sudo <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span> NOPASSWD: /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit<span class=\"token operator\">=</span>basic.target\n%sudo <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span> NOPASSWD: /usr/bin/nsenter -t <span class=\"token punctuation\">[</span><span class=\"token number\">0</span>-9<span class=\"token punctuation\">]</span>* -a <span class=\"token function\">su</span> - <span class=\"token punctuation\">[</span>a-zA-Z0-9<span class=\"token punctuation\">]</span>*</code></pre></div>\n<p>Вставьте, сохраните <code class=\"language-text\">Ctrl+O</code>, <code class=\"language-text\">Enter</code> и закройте <code class=\"language-text\">Ctrl+X</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Defaults        env_keep <span class=\"token operator\">+=</span> WSLPATH\nDefaults        env_keep <span class=\"token operator\">+=</span> WSLENV\nDefaults        env_keep <span class=\"token operator\">+=</span> WSL_INTEROP\nDefaults        env_keep <span class=\"token operator\">+=</span> WSL_DISTRO_NAME\nDefaults        env_keep <span class=\"token operator\">+=</span> PRE_NAMESPACE_PATH\n%sudo <span class=\"token assign-left variable\">ALL</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ALL<span class=\"token punctuation\">)</span> NOPASSWD: /usr/sbin/enter-systemd-namespace</code></pre></div>\n<h3>bashrc</h3>\n<p>Выполните команду</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i 2a<span class=\"token string\">\"# Start or enter a PID namespace in WSL2<span class=\"token entity\" title=\"\\n\">\\n</span>source /usr/sbin/start-systemd-namespace<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> /etc/bash.bashrc</code></pre></div>\n<p>и удалите файл <code class=\"language-text\">/etc/profile.d/00-wsl.sh</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> /etc/profile.d/00-wsl.sh</code></pre></div>\n<h3>powershell</h3>\n<p>Отключите дистрибутив</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">wsl --terminate ubuntu-18.04</code></pre></div>\n<p>Заново запустите WSL и введите <code class=\"language-text\">code</code></p>\n<p>Поставьте лайк и подпишитесь на канал что бы не пропустить следующий выпуск.</p>\n<h2>UPD</h2>\n<p>Для Ubuntu-20.04 в файле <code class=\"language-text\">/usr/sbin/start-systemd-namespace</code> 10ую строчку</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    /usr/sbin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit<span class=\"token operator\">=</span>basic.target</code></pre></div>\n<p>замените на</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">    /usr/bin/daemonize /usr/bin/unshare --fork --pid --mount-proc /lib/systemd/systemd --system-unit<span class=\"token operator\">=</span>basic.target</code></pre></div>\n<p>в версиии 20.04 <code class=\"language-text\">daemonize</code> устанавливается в директорию <code class=\"language-text\">/usr/bin</code></p>\n<h5>Надеюсь Вам было интересно, подпишитесь на канал это дает мне больше мотивации создавать более интересные видео и чаще</h5>","frontmatter":{"title":"WSL2: VSCode + WSL2","date":"May 14, 2020","description":"Настройка VSCode и WSL 2 для разработки"}}},"pageContext":{"slug":"/2020/05/vscode-wsl2/","previous":{"fields":{"slug":"/2020/05/setup-wsl2/"},"frontmatter":{"title":"WSL2: Установка и настройка"}},"next":{"fields":{"slug":"/2020/06/gui-wsl2/"},"frontmatter":{"title":"WSL2: GUI + AUDIO"}}}},"staticQueryHashes":["2841359383"]}